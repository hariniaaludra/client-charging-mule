<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="c94e7d32-4cdf-4c4d-87db-9d380e578882" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="020fca61-cf82-4d0f-81db-1f26d19d482a" basePath="/books/v3" >
		<http:request-connection host="www.zohoapis.in" />
	</http:request-config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="5e789387-5165-4936-8e3b-0f3685e6fc95" >
		<db:my-sql-connection host="localhost" port="3306" user="root" password="root" database="client-charging" />
	</db:config>
	<flow name="client_chargingFlow" doc:id="7d6b2129-a869-4b3a-b5a5-d2eee1271da4" >
		<http:listener doc:name="Listener" doc:id="bf704cf3-ca1c-4e92-bf03-fc941daa1b6f" config-ref="HTTP_Listener_config" path="/getinvoices"/>
		<http:request method="GET" doc:name="get invoice" doc:id="ff785247-f21d-4349-838e-22f4e9beefee" config-ref="HTTP_Request_configuration" path="/invoices" sendBodyMode="ALWAYS">
			<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : "Zoho-oauthtoken 1000.00fe85be1fbeffd40548d48dae0d2a18.5840c90383272074259a77ec8b1e1111"
}]]]></http:headers>
			<http:query-params ><![CDATA[#[output application/java
---
{
	"status" : "sent"
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="fbe4b07f-3892-4bf0-a760-05c4134e12d3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.invoices map ((invoice) -> {
    customer_id: invoice.customer_id,
    amount:invoice.total
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="eca9aaf9-5715-431c-9df1-ca2c9a2013ac" collection="#[payload]">
			<set-variable variableName="amountData" value="#[payload.amount]" doc:name="Amount Variable"/>
			<set-variable variableName="customerIdData" value="#[payload.customer_id]" doc:name="Customer Id Variable"/>
			<db:select doc:name="get customer record" doc:id="5439088f-d25c-43f2-b6bb-6b1be8d6d1cd" config-ref="Database_Config">
			<db:sql><![CDATA[
SELECT 
    cc_customers.*,
    cc_customers_bank_details.acc_balance
FROM 
    cc_customers
LEFT JOIN 
    cc_customers_bank_details ON cc_customers.bank_acc_no = cc_customers_bank_details.id
WHERE 
    cc_customers.id = :customerId;]]></db:sql>
			<db:input-parameters><![CDATA[#[{'customerId':payload.customer_id
}]]]></db:input-parameters>
		</db:select>
			<ee:transform doc:name="Transform Message" doc:id="b96f5569-8ac1-4254-90a3-b322d10a68a5">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload map ((item) -> item ++ {"amount": vars.amountData}))[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Condition">
				<when expression="#[payload != null and payload.acc_balance != null and payload.amount != null and payload.acc_balance as Number > payload.amount as Number]">
                    <db:update doc:name="Update Bank Account Balance" doc:id="be2b212b-fcaa-4126-a923-f6517a7be6fb" config-ref="Database_Config">
                        <db:sql><![CDATA[UPDATE cc_customers_bank_details SET acc_balance = acc_balance - :amount WHERE id = :bank_acc_no]]></db:sql>
                        <db:input-parameters><![CDATA[#[{'amount': payload.amount, 'bank_acc_no': payload.bank_acc_no}]]]></db:input-parameters>
                    </db:update>
                    <set-payload value="#[{'customer_id': vars.customerIdData,&#10; 'status':'Updated'}]" doc:name="Set updated Payload"/>
                </when>
                <otherwise>
                    <set-payload value="#[{'customer_id': vars.customerIdData,&#10; 'status':'Not updated'}]" doc:name="Not updated Payload"/>
                </otherwise>
            </choice>
		 <set-variable variableName="customerData" value="#[%dw 2.0&#10;output application/json&#10;---&#10;&#10;if (vars.customerData != null) vars.customerData ++ payload else payload]" />
		</foreach>
		<set-payload value="#[vars.customerData]" />
	</flow>
</mule>
